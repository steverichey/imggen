#!/bin/sh

pass_count=0
fail_count=0

# usage: verify actual_value expected_value [error_message]
verify()
{
  if [ ! ${1} ]
  then
    echo "[verify] Missing required parameter: comparison value"
  fi

  if [ "${1}" -ne "${2}" ]
  then
    if [ "${3}" ]
    then
      echo "[verify] Failed: ${3}, expected: ${2}, actual: ${1}"
    else
      echo "[verify] Failed, expected: ${2}, actual: ${1}"
    fi

    fail_count=`expr ${fail_count} + 1`
  else
    pass_count=`expr ${pass_count} + 1`
  fi
}

# Clear test image folder
# rm test_output/*.png

# Tests
result=`./imggen`
verify ${?} 1 "No parameters should result in failure"

single_dimension="333"

result=`./imggen "${single_dimension}"`
verify ${?} 0 "Single parameter with one dimension should succeed"

result=`test -f placeholder_"${single_dimension}"x"${single_dimension}".png`
verify ${?} 0 "Default file should be placeholder_[width]x[height].png"

result=`identify -format '%w' placeholder_"${single_dimension}"x"${single_dimension}".png`
verify ${result} 333 "Single dimension parameter should create image of correct width"

result=`identify -format '%h' placeholder_"${single_dimension}"x"${single_dimension}".png`
verify ${result} 333 "Single dimension parameter should create image of correct height"

both_dimensions="47x84"

result=`./imggen "${both_dimensions}"`
verify ${?} 0 "Single parameter with width and height should succeed"

result=`test -f placeholder_"${both_dimensions}".png`
verify ${?} 0 "Default file should be placeholder_[width]x[height].png"

result=`identify -format '%w' placeholder_"${both_dimensions}".png`
verify ${result} 47 "Both dimension parameter should create image of correct width"

result=`identify -format '%h' placeholder_"${both_dimensions}".png`
verify ${result} 84 "Both dimension parameter should create image of correct height"

# Final result
echo "Testing complete. ${pass_count} passed, ${fail_count} failed."

if [ ${fail_count} -gt 0 ]
then
  exit 1
else
  exit 0
fi
